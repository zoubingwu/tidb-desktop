name: Release

on:
  # Trigger when a tag starting with 'v' is pushed
  push:
    tags:
      - 'v*'
  # Allow manual trigger from Actions tab
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build (e.g., v0.1.0)'
        required: true

jobs:
  release:
    name: Release macOS
    runs-on: macos-latest
    permissions:
      contents: write # Needed for actions/create-release

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for commit hash

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: go.sum

      - name: Install Go dependencies
        run: go mod tidy

      # Install Wails CLI
      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      # Determine version and commit hash
      - name: Get Version and Commit
        id: vars
        run: |
          # Use tag from workflow_dispatch input if present, otherwise use github.ref_name (pushed tag)
          TAG=${{ github.event.inputs.tag || github.ref_name }}
          # Strip 'v' prefix if it exists for clean version number (optional, adjust based on your main.go expectation)
          VERSION=${TAG#v}
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "commit_hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: Release ${{ steps.vars.outputs.tag }}
          body: |
            Release notes for ${{ steps.vars.outputs.tag }}
            Commit: ${{ steps.vars.outputs.commit_hash }}
          draft: false
          prerelease: false # Set to true if it's a pre-release

      - name: Build Wails app for macOS
        run: |
          echo "Building version ${{ steps.vars.outputs.version }} (${{ steps.vars.outputs.commit_hash }})"
          # Note: Using steps.vars.outputs.version here (without 'v')
          wails build -platform=darwin/universal \
                      -ldflags="-s -w -X main.version=${{ steps.vars.outputs.version }} -X main.commitHash=${{ steps.vars.outputs.commit_hash }}" \
                      -trimpath
        env:
          CGO_ENABLED: 1

      - name: Zip macOS Artifact
        run: |
          cd "build/bin"
          zip -r "TiDB Desktop.app.zip" "TiDB Desktop.app"
        shell: bash

      - name: Upload macOS Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # URL from the create_release step
          asset_path: ./build/bin/TiDB Desktop.app.zip
          asset_name: TiDB-Desktop-${{ steps.vars.outputs.tag }}-macos-universal.app.zip # Use tag in asset name
          asset_content_type: application/zip
